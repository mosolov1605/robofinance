plugins {
    id "java"
    id "idea"
    id "jacoco"
    id "org.springframework.boot" version "2.2.5.RELEASE"
}

description = "robofinance"
group = "ru.mosolov.robotest"
version = '0.0.1'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    springBootVersion = "2.2.5.RELEASE"
    springCloudVersion = "Hoxton.RELEASE"
}

configurations {
    springBom
    compile { extendsFrom springBom }
    annotationProcessor { extendsFrom springBom }
    testAnnotationProcessor { extendsFrom springBom }
    compileOnly { extendsFrom annotationProcessor }
}

compileJava {
    options.compilerArgs << "-parameters"
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    springBom platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    springBom platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")

    compile "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.boot:spring-boot-starter-web",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-xml",
            "io.micrometer:micrometer-registry-prometheus"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
    testImplementation "org.mockito:mockito-junit-jupiter"

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    runtimeOnly "org.springframework.boot:spring-boot-devtools",
            "org.postgresql:postgresql"
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
        showStandardStreams = true
        showExceptions = true
        showCauses = true
        exceptionFormat = 'full'
    }
    reports {
        html.enabled = false
    }
    systemProperty 'file.encoding', 'UTF-8'
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        html.enabled false
        xml.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.70
            }
        }
    }
}

bootJar {
    archiveFileName = "${project.name}.jar"
}